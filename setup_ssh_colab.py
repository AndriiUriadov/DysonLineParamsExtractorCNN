#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ Google Colab
"""

import subprocess
import sys
import os
import time
import webbrowser

def print_header():
    """–í–∏–≤–æ–¥–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
    print("=" * 60)
    print("üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ Google Colab")
    print("=" * 60)
    print()

def check_ssh_keys():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å SSH –∫–ª—é—á—ñ–≤"""
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ SSH –∫–ª—é—á—ñ–≤...")
    
    ssh_dir = os.path.expanduser("~/.ssh")
    if not os.path.exists(ssh_dir):
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è ~/.ssh –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
    private_key = os.path.join(ssh_dir, "id_ed25519")
    if os.path.exists(private_key):
        print("‚úÖ –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á –∑–Ω–∞–π–¥–µ–Ω–æ: id_ed25519")
        return True
    else:
        print("‚ùå –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return False

def generate_ssh_key():
    """–ì–µ–Ω–µ—Ä—É—î SSH –∫–ª—é—á"""
    print("üîë –ì–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è SSH –∫–ª—é—á–∞...")
    
    try:
        result = subprocess.run([
            'ssh-keygen', '-t', 'ed25519', '-f', '~/.ssh/id_ed25519', '-N', ''
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ SSH –∫–ª—é—á —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ")
            return True
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–ª—é—á–∞: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

def open_colab():
    """–í—ñ–¥–∫—Ä–∏–≤–∞—î Google Colab"""
    print("üåê –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ Google Colab...")
    webbrowser.open("https://colab.research.google.com/")
    print("‚úÖ Google Colab –≤—ñ–¥–∫—Ä–∏—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ")

def show_colab_instructions():
    """–ü–æ–∫–∞–∑—É—î —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è Colab"""
    print("\nüìã –Ü–ù–°–¢–†–£–ö–¶–Ü–Ø –î–õ–Ø COLAB:")
    print("=" * 50)
    print()
    print("1. üåê Google Colab –≤–∂–µ –≤—ñ–¥–∫—Ä–∏—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ")
    print("2. üìù –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π notebook")
    print("3. ‚öôÔ∏è  –ù–∞–ª–∞—à—Ç—É–π—Ç–µ runtime:")
    print("   - Runtime ‚Üí Change runtime type")
    print("   - Hardware accelerator: GPU")
    print("   - Runtime shape: High-RAM")
    print("4. üìã –í—Å—Ç–∞–≤—Ç–µ –∫–æ–¥ –≤ –ø–µ—Ä—à—É –∫–æ–º—ñ—Ä–∫—É:")
    print()
    
    colab_code = '''# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ colab-ssh
!pip install colab-ssh

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –º–æ–¥—É–ª—ñ
from colab_ssh import launch_ssh_cloudflared
import random
import string

# –ì–µ–Ω–µ—Ä—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –ø–∞—Ä–æ–ª—å
password = ''.join(random.choices(string.ascii_letters + string.digits, k=12))
print(f"üîê –ü–∞—Ä–æ–ª—å –¥–ª—è SSH: {password}")

# –ó–∞–ø—É—Å–∫–∞—î–º–æ SSH —Å–µ—Ä–≤–µ—Ä
launch_ssh_cloudflared(password=password, verbose=True)'''
    
    print("-" * 50)
    print(colab_code)
    print("-" * 50)
    print()
    print("5. ‚ö° –ó–∞–ø—É—Å—Ç—ñ—Ç—å –∫–æ–º—ñ—Ä–∫—É (Shift + Enter)")
    print("6. üìã –°–∫–æ–ø—ñ—é–π—Ç–µ SSH –∫–æ–º–∞–Ω–¥—É –∑ –≤–∏–≤–æ–¥—É")
    print("7. üîÑ –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è —Å—é–¥–∏ —ñ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter")
    print()

def test_ssh_connection(host, password):
    """–¢–µ—Å—Ç—É—î SSH –∑'—î–¥–Ω–∞–Ω–Ω—è"""
    print(f"üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –¥–æ {host}...")
    
    try:
        # –¢–µ—Å—Ç—É—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Ç–∞–π–º–∞—É—Ç–æ–º
        result = subprocess.run([
            'ssh', '-o', 'ConnectTimeout=10', '-o', 'StrictHostKeyChecking=no',
            f'root@{host}', 'echo "SSH connection test"'
        ], capture_output=True, text=True, timeout=15)
        
        if result.returncode == 0:
            print("‚úÖ SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –ø—Ä–∞—Ü—é—î!")
            return True
        else:
            print(f"‚ùå SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –Ω–µ –ø—Ä–∞—Ü—é—î: {result.stderr}")
            return False
            
    except subprocess.TimeoutExpired:
        print("‚ùå –¢–∞–π–º–∞—É—Ç SSH –∑'—î–¥–Ω–∞–Ω–Ω—è")
        return False
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ SSH –∑'—î–¥–Ω–∞–Ω–Ω—è: {e}")
        return False

def run_gpu_check_ssh(host, password):
    """–ó–∞–ø—É—Å–∫–∞—î GPU check —á–µ—Ä–µ–∑ SSH"""
    print(f"üöÄ –ó–∞–ø—É—Å–∫ GPU check —á–µ—Ä–µ–∑ SSH...")
    print()
    
    # –ö–æ–ø—ñ—é—î–º–æ —Ñ–∞–π–ª
    print("üìÅ –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É...")
    copy_cmd = f"scp -o StrictHostKeyChecking=no improved_gpu_check_notebook.py root@{host}:/tmp/"
    
    try:
        copy_result = subprocess.run(copy_cmd, shell=True, capture_output=True, text=True)
        
        if copy_result.returncode != 0:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è: {copy_result.stderr}")
            return False
        
        print("‚úÖ –§–∞–π–ª —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ")
        
        # –í–∏–∫–æ–Ω—É—î–º–æ GPU check
        print("‚ö° –í–∏–∫–æ–Ω–∞–Ω–Ω—è GPU check...")
        print("-" * 50)
        
        execute_cmd = f"ssh -o StrictHostKeyChecking=no root@{host} 'cd /tmp && python3 improved_gpu_check_notebook.py'"
        execute_result = subprocess.run(execute_cmd, shell=True, text=True)
        
        if execute_result.returncode == 0:
            print("-" * 50)
            print("‚úÖ GPU check —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–æ!")
            return True
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è GPU check")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print_header()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ SSH –∫–ª—é—á—ñ
    if not check_ssh_keys():
        print("üîë –ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ SSH –∫–ª—é—á...")
        if not generate_ssh_key():
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ SSH –∫–ª—é—á")
            return
    
    # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ Colab
    open_colab()
    
    # –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
    show_colab_instructions()
    
    # –û—á—ñ–∫—É—î–º–æ –≤–≤–µ–¥–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    input("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –∫–æ–ª–∏ SSH –±—É–¥–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –≤ Colab...")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è SSH
    print("\nüîß –í–≤–µ–¥—ñ—Ç—å –¥–∞–Ω—ñ SSH –∑ Colab:")
    host = input("SSH —Ö–æ—Å—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, partition-been-indoor-barrier.trycloudflare.com): ").strip()
    password = input("SSH –ø–∞—Ä–æ–ª—å: ").strip()
    
    if not host or not password:
        print("‚ùå –ù–µ –≤–≤–µ–¥–µ–Ω–æ —Ö–æ—Å—Ç –∞–±–æ –ø–∞—Ä–æ–ª—å")
        return
    
    # –¢–µ—Å—Ç—É—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è
    if test_ssh_connection(host, password):
        print("\nüéâ SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ!")
        
        # –ü–∏—Ç–∞—î–º–æ —á–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ GPU check
        choice = input("\nüöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ GPU check —á–µ—Ä–µ–∑ SSH? (y/n): ").strip().lower()
        
        if choice in ['y', 'yes', '—Ç–∞–∫', '–¥–∞']:
            if not os.path.exists('improved_gpu_check_notebook.py'):
                print("‚ùå –§–∞–π–ª improved_gpu_check_notebook.py –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
                return
            
            success = run_gpu_check_ssh(host, password)
            if success:
                print("\nüéâ GPU check —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–æ –≤ Colab!")
            else:
                print("\n‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∫–æ–Ω–∞—Ç–∏ GPU check")
        else:
            print("\nüìù –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ GPU check –ø—ñ–∑–Ω—ñ—à–µ –∫–æ–º–∞–Ω–¥–æ—é:")
            print(f"   scp improved_gpu_check_notebook.py root@{host}:/tmp/")
            print(f"   ssh root@{host} 'cd /tmp && python3 improved_gpu_check_notebook.py'")
    else:
        print("\n‚ùå SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –Ω–µ –ø—Ä–∞—Ü—é—î")
        print("–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤ Colab —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑")

if __name__ == "__main__":
    main() 