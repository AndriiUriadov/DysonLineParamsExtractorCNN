#!/usr/bin/env python3
"""
–í–∏–∫–æ–Ω–∞–Ω–Ω—è —á–µ—Ä–µ–∑ Cloudflare Tunnel HTTP API
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π Cloudflare Tunnel
"""

import requests
import json
import os
import sys
import subprocess
import time

class CloudflareAPIRunner:
    """–í–∏–∫–æ–Ω–∞–≤–µ—Ü—å —á–µ—Ä–µ–∑ Cloudflare Tunnel"""
    
    def __init__(self):
        self.tunnel_url = None
        self.server_running = False
        
    def start_local_server(self):
        """–ó–∞–ø—É—Å–∫–∞—î –ª–æ–∫–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤–µ—Ä"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...")
        
        try:
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ
            self.server_process = subprocess.Popen([
                'python3', 'test_tunnel_simple.py'
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            
            time.sleep(2)  # –î–∞—î–º–æ —á–∞—Å –Ω–∞ –∑–∞–ø—É—Å–∫
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π
            try:
                response = requests.get('http://localhost:8080/api/status', timeout=5)
                if response.status_code == 200:
                    print("‚úÖ –õ–æ–∫–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π!")
                    self.server_running = True
                    return True
            except:
                pass
            
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤–µ—Ä")
            return False
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞: {e}")
            return False
    
    def start_cloudflare_tunnel(self):
        """–ó–∞–ø—É—Å–∫–∞—î Cloudflare Tunnel"""
        print("üåê –ó–∞–ø—É—Å–∫ Cloudflare Tunnel...")
        
        try:
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ tunnel –≤ —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ
            self.tunnel_process = subprocess.Popen([
                'cloudflared', 'tunnel', '--config', 'tunnel-config.yml', 'run'
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            
            time.sleep(3)  # –î–∞—î–º–æ —á–∞—Å –Ω–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
            
            # –û—Ç—Ä–∏–º—É—î–º–æ URL –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
            try:
                with open('tunnel-config.yml', 'r') as f:
                    config = f.read()
                    if 'hostname:' in config:
                        for line in config.split('\n'):
                            if 'hostname:' in line:
                                self.tunnel_url = f"https://{line.split(':')[1].strip()}"
                                break
                
                if self.tunnel_url:
                    print(f"‚úÖ Cloudflare Tunnel –∑–∞–ø—É—â–µ–Ω–∏–π: {self.tunnel_url}")
                    return True
                else:
                    print("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ URL –≤ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó")
                    return False
                    
            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó: {e}")
                return False
                
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É tunnel: {e}")
            return False
    
    def execute_file_via_api(self, file_path):
        """–í–∏–∫–æ–Ω—É—î —Ñ–∞–π–ª —á–µ—Ä–µ–∑ HTTP API"""
        if not self.tunnel_url:
            print("‚ùå Cloudflare Tunnel –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π")
            return False
        
        if not os.path.exists(file_path):
            print(f"‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {file_path}")
            return False
        
        # –ß–∏—Ç–∞—î–º–æ —Ñ–∞–π–ª
        with open(file_path, 'r', encoding='utf-8') as f:
            code_content = f.read()
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∫–æ–¥ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
        print(f"üìÅ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ {os.path.basename(file_path)} –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è...")
        
        try:
            response = requests.post(f"{self.tunnel_url}/api/execute", json={
                'code': code_content,
                'filename': os.path.basename(file_path)
            }, timeout=300)
            
            if response.status_code == 200:
                result = response.json()
                print("‚úÖ –§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–æ!")
                print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–ò:")
                print("=" * 60)
                print(result.get('output', '–ù–µ–º–∞—î –≤–∏–≤–æ–¥—É'))
                print("=" * 60)
                return True
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: {response.status_code}")
                return False
                
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ API –∑–∞–ø–∏—Ç—É: {e}")
            return False
    
    def run(self, file_path):
        """–û—Å–Ω–æ–≤–Ω–∏–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫—É"""
        print("üöÄ –í–ò–ö–û–ù–ê–ù–ù–Ø –ß–ï–†–ï–ó CLOUDFLARE TUNNEL")
        print("=" * 50)
        print(f"üìÅ –§–∞–π–ª: {file_path}")
        print()
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤–µ—Ä
        if not self.start_local_server():
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤–µ—Ä")
            return False
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ Cloudflare Tunnel
        if not self.start_cloudflare_tunnel():
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ Cloudflare Tunnel")
            return False
        
        # –í–∏–∫–æ–Ω—É—î–º–æ —Ñ–∞–π–ª
        return self.execute_file_via_api(file_path)

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    if len(sys.argv) < 2:
        print("üìã –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:")
        print("   python3 cloudflare_api_runner.py <—Ñ–∞–π–ª.py>")
        return
    
    file_path = sys.argv[1]
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {file_path}")
        return
    
    runner = CloudflareAPIRunner()
    runner.run(file_path)

if __name__ == "__main__":
    main() 