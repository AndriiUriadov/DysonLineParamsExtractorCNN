#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ SSH –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –≤ Google Colab
–ó –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º –∑'—î–¥–Ω–∞–Ω–Ω—è
"""

import subprocess
import sys
import os
import time
import webbrowser
import requests
import json

class AutoSSHColab:
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π SSH –≤–∏–∫–æ–Ω–∞–≤–µ—Ü—å –¥–ª—è Colab"""
    
    def __init__(self):
        self.ssh_host = None
        self.ssh_password = None
        self.connection_active = False
        
    def setup_colab_ssh(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î SSH –≤ Colab"""
        print("üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ï –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø SSH –í COLAB")
        print("=" * 50)
        
        # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ Colab
        print("üöÄ –í—ñ–¥–∫—Ä–∏–≤–∞—é Google Colab...")
        webbrowser.open("https://colab.research.google.com/")
        
        print("\nüìã –Ü–ù–°–¢–†–£–ö–¶–Ü–Ø:")
        print("1. –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π notebook")
        print("2. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ runtime (GPU + High-RAM)")
        print("3. –í—Å—Ç–∞–≤—Ç–µ –∫–æ–¥ –≤ –∫–æ–º—ñ—Ä–∫—É:")
        print()
        
        ssh_code = '''!pip install colab-ssh
from colab_ssh import launch_ssh_cloudflared
import random, string
password = ''.join(random.choices(string.ascii_letters + string.digits, k=12))
print(f'üîê –ü–∞—Ä–æ–ª—å: {password}')
launch_ssh_cloudflared(password=password, verbose=True)'''
        
        print("```python")
        print(ssh_code)
        print("```")
        print()
        print("4. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –∫–æ–º—ñ—Ä–∫—É (Shift + Enter)")
        print("5. –°–∫–æ–ø—ñ—é–π—Ç–µ SSH —Ö–æ—Å—Ç —Ç–∞ –ø–∞—Ä–æ–ª—å")
        print("6. –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –≤ —Ç–µ—Ä–º—ñ–Ω–∞–ª")
        print("=" * 50)
        
        input("\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –∫–æ–ª–∏ –Ω–∞–ª–∞—à—Ç—É—î—Ç–µ SSH...")
        
        # –û—Ç—Ä–∏–º—É—î–º–æ SSH –¥–∞–Ω—ñ
        print("\nüîê –í–≤–µ–¥—ñ—Ç—å SSH –¥–∞–Ω—ñ:")
        self.ssh_host = input("SSH —Ö–æ—Å—Ç: ").strip()
        self.ssh_password = input("SSH –ø–∞—Ä–æ–ª—å: ").strip()
        
        if not self.ssh_host or not self.ssh_password:
            print("‚ùå –ù–µ –≤–≤–µ–¥–µ–Ω–æ SSH –¥–∞–Ω—ñ")
            return False
        
        # –¢–µ—Å—Ç—É—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è
        return self.test_connection()
    
    def test_connection(self):
        """–¢–µ—Å—Ç—É—î SSH –∑'—î–¥–Ω–∞–Ω–Ω—è"""
        print(f"üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –¥–æ {self.ssh_host}...")
        
        try:
            result = subprocess.run([
                'ssh', '-o', 'ConnectTimeout=10', '-o', 'StrictHostKeyChecking=no',
                f'root@{self.ssh_host}', 'echo "SSH connection test"'
            ], capture_output=True, text=True, timeout=15)
            
            if result.returncode == 0:
                print("‚úÖ SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –ø—Ä–∞—Ü—é—î!")
                self.connection_active = True
                return True
            else:
                print(f"‚ùå SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –Ω–µ –ø—Ä–∞—Ü—é—î: {result.stderr}")
                return False
                
        except subprocess.TimeoutExpired:
            print("‚ùå –¢–∞–π–º–∞—É—Ç SSH –∑'—î–¥–Ω–∞–Ω–Ω—è")
            return False
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ SSH –∑'—î–¥–Ω–∞–Ω–Ω—è: {e}")
            return False
    
    def execute_file(self, file_path):
        """–í–∏–∫–æ–Ω—É—î —Ñ–∞–π–ª –≤ Colab —á–µ—Ä–µ–∑ SSH"""
        if not self.connection_active:
            print("‚ùå SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–µ")
            return False
        
        if not os.path.exists(file_path):
            print(f"‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {file_path}")
            return False
        
        filename = os.path.basename(file_path)
        print(f"üìÅ –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è {filename} –≤ Colab...")
        
        try:
            # –ö–æ–ø—ñ—é—î–º–æ —Ñ–∞–π–ª
            result = subprocess.run([
                'scp', '-o', 'StrictHostKeyChecking=no', file_path,
                f'root@{self.ssh_host}:/tmp/'
            ], capture_output=True, text=True, timeout=30)
            
            if result.returncode != 0:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è: {result.stderr}")
                return False
            
            print("‚úÖ –§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!")
            
            # –í–∏–∫–æ–Ω—É—î–º–æ —Ñ–∞–π–ª
            print(f"üöÄ –í–∏–∫–æ–Ω–∞–Ω–Ω—è {filename} –≤ Colab...")
            print("=" * 60)
            
            result = subprocess.run([
                'ssh', '-o', 'StrictHostKeyChecking=no', f'root@{self.ssh_host}',
                f'cd /tmp && python3 {filename}'
            ], text=True, timeout=300)
            
            print("=" * 60)
            
            if result.returncode == 0:
                print("‚úÖ –§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–æ –≤ Colab!")
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è (–∫–æ–¥: {result.returncode})")
            
            return True
            
        except subprocess.TimeoutExpired:
            print("‚ùå –¢–∞–π–º–∞—É—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è (5 —Ö–≤–∏–ª–∏–Ω)")
            return False
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
            return False
    
    def run(self, file_path):
        """–û—Å–Ω–æ–≤–Ω–∏–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫—É"""
        print("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ï SSH –í–ò–ö–û–ù–ê–ù–ù–Ø –í COLAB")
        print("=" * 50)
        print(f"üìÅ –§–∞–π–ª: {file_path}")
        print()
        
        # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ SSH
        if not self.setup_colab_ssh():
            print("\n‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ SSH –∑'—î–¥–Ω–∞–Ω–Ω—è")
            return False
        
        # –í–∏–∫–æ–Ω—É—î–º–æ —Ñ–∞–π–ª
        return self.execute_file(file_path)

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    if len(sys.argv) < 2:
        print("üìã –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:")
        print("   python3 auto_ssh_colab.py <—Ñ–∞–π–ª.py>")
        return
    
    file_path = sys.argv[1]
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {file_path}")
        return
    
    runner = AutoSSHColab()
    runner.run(file_path)

if __name__ == "__main__":
    main() 