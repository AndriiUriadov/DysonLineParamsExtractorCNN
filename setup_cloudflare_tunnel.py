#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Cloudflare Tunnel
–î–æ–ø–æ–º–∞–≥–∞—î –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Ç—É–Ω–µ–ª—å –¥–ª—è –ø—Ä–æ–µ–∫—Ç—É DysonLineCNN
"""

import json
import os
import subprocess
import sys
from datetime import datetime

def print_header():
    """–í–∏–≤–æ–¥–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∫—Ä–∏–ø—Ç–∞"""
    print("=" * 60)
    print("üöÄ Cloudflare Tunnel Setup –¥–ª—è DysonLineCNN")
    print("=" * 60)
    print()

def check_cloudflared():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π cloudflared"""
    try:
        result = subprocess.run(['cloudflared', '--version'], 
                              capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ cloudflared –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            print(f"üì¶ –í–µ—Ä—Å—ñ—è: {result.stdout.strip()}")
            return True
        else:
            print("‚ùå cloudflared –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            return False
    except FileNotFoundError:
        print("‚ùå cloudflared –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return False

def install_cloudflared():
    """–í—Å—Ç–∞–Ω–æ–≤–ª—é—î cloudflared"""
    print("üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è cloudflared...")
    
    if sys.platform == "darwin":  # macOS
        try:
            subprocess.run(['brew', 'install', 'cloudflare/cloudflare/cloudflared'], 
                         check=True)
            print("‚úÖ cloudflared –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ Homebrew")
            return True
        except subprocess.CalledProcessError:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Homebrew")
            return False
    else:
        print("‚ö†Ô∏è  –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å cloudflared –≤—Ä—É—á–Ω—É:")
        print("   https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/installation/")
        return False

def create_config_file():
    """–°—Ç–≤–æ—Ä—é—î –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏–π —Ñ–∞–π–ª –¥–ª—è —Ç—É–Ω–µ–ª—è"""
    config = {
        "tunnel": "66aaa8ad-3c2c-4d61-8a92-751613b5340b",
        "credentials-file": "./tunnel-credentials.json",
        "ingress": [
            {
                "hostname": "dysonlinecnn.your-domain.com",
                "service": "http://localhost:8080"
            },
            {
                "service": "http_status:404"
            }
        ]
    }
    
    with open('tunnel-config.yml', 'w') as f:
        f.write("tunnel: 66aaa8ad-3c2c-4d61-8a92-751613b5340b\n")
        f.write("credentials-file: ./tunnel-credentials.json\n")
        f.write("\n")
        f.write("ingress:\n")
        f.write("  - hostname: dysonlinecnn.your-domain.com\n")
        f.write("    service: http://localhost:8080\n")
        f.write("  - service: http_status:404\n")
    
    print("‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏–π —Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ: tunnel-config.yml")

def show_next_steps():
    """–ü–æ–∫–∞–∑—É—î –Ω–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏"""
    print("\n" + "=" * 60)
    print("üìã –ù–ê–°–¢–£–ü–ù–Ü –ö–†–û–ö–ò:")
    print("=" * 60)
    
    steps = [
        "1. üîß –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü—ñ—é –≤ Cloudflare Dashboard:",
        "   - –ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ Zero Trust ‚Üí Access ‚Üí Tunnels",
        "   - –ó–Ω–∞–π–¥—ñ—Ç—å —Ç—É–Ω–µ–ª—å 'DysonLineCNN-001'",
        "   - –î–æ–¥–∞–π—Ç–µ –º–∞—Ä—à—Ä—É—Ç: dysonlinecnn.your-domain.com ‚Üí http://localhost:8080",
        "",
        "2. üåê –ó–∞–º—ñ–Ω—ñ—Ç—å 'your-domain.com' –Ω–∞ –≤–∞—à –¥–æ–º–µ–Ω",
        "",
        "3. üöÄ –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Ç–µ—Å—Ç–æ–≤–∏–π —Å–µ—Ä–≤–µ—Ä:",
        "   python3 test_tunnel_server.py",
        "",
        "4. üîó –¢–µ—Å—Ç—É–π—Ç–µ –∑'—î–¥–Ω–∞–Ω–Ω—è:",
        "   - –õ–æ–∫–∞–ª—å–Ω–æ: http://localhost:8080",
        "   - –ß–µ—Ä–µ–∑ —Ç—É–Ω–µ–ª—å: https://dysonlinecnn.your-domain.com",
        "",
        "5. üìä –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å—Ç–∞—Ç—É—Å API:",
        "   https://dysonlinecnn.your-domain.com/api/status",
        "",
        "6. üîí –ù–∞–ª–∞—à—Ç—É–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —á–µ—Ä–µ–∑ Cloudflare)",
        "",
        "7. üì± –¢–µ—Å—Ç—É–π—Ç–µ –∑ —Ä—ñ–∑–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ —Ç–∞ –º–µ—Ä–µ–∂"
    ]
    
    for step in steps:
        print(step)

def run_tunnel():
    """–ó–∞–ø—É—Å–∫–∞—î —Ç—É–Ω–µ–ª—å"""
    print("\nüöÄ –ó–∞–ø—É—Å–∫ Cloudflare Tunnel...")
    print("‚ö†Ô∏è  –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 8080")
    
    try:
        subprocess.run(['cloudflared', 'tunnel', '--config', 'tunnel-config.yml', 'run'], 
                      check=True)
    except KeyboardInterrupt:
        print("\nüõë –¢—É–Ω–µ–ª—å –∑—É–ø–∏–Ω–µ–Ω–æ")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Ç—É–Ω–µ–ª—è: {e}")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print_header()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ cloudflared
    if not check_cloudflared():
        print("\nüì¶ –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ cloudflared...")
        if not install_cloudflared():
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ cloudflared")
            return
    
    print("\n‚úÖ cloudflared –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
    create_config_file()
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏
    show_next_steps()
    
    # –ü–∏—Ç–∞—î–º–æ —á–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç—É–Ω–µ–ª—å
    print("\n" + "-" * 60)
    response = input("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç—É–Ω–µ–ª—å –∑–∞—Ä–∞–∑? (y/n): ").lower().strip()
    
    if response in ['y', 'yes', '—Ç–∞–∫', '–¥–∞']:
        run_tunnel()
    else:
        print("üìù –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç—É–Ω–µ–ª—å –ø—ñ–∑–Ω—ñ—à–µ –∫–æ–º–∞–Ω–¥–æ—é:")
        print("   cloudflared tunnel --config tunnel-config.yml run")

if __name__ == "__main__":
    main() 